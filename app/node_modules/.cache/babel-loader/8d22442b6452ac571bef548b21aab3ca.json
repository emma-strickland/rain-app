{"ast":null,"code":"var _jsxFileName = \"/Users/emmastrickland/dev/rain-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"93da148cde43b30ed7c6df2296294e89\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [zipCode, setZipCode] = useState('');\n  const [rain, setRain] = useState({});\n  const [isRainingToday, setIsRainingToday] = useState('');\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?zip=${zipCode}&units=imperial&appid=${api.key}`).then(res => res.json()).then(result => {\n        setRain(result);\n        setZipCode('');\n        console.log(result);\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Enter zip code\",\n          onChange: e => setZipCode(e.target.value),\n          value: zipCode,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), typeof rain.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [rain.name, \", \", rain.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new Date().toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), isRainingToday !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rains\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rain-true\",\n            children: [rain.main === \"rain\", \"Yes, it will rain today!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rain-false\",\n            children: \"No, it will not rain today :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pjdwLr7JJlgL4LzjQa+7CD01rdI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emmastrickland/dev/rain-app/src/App.js"],"names":["React","useState","api","key","base","App","zipCode","setZipCode","rain","setRain","isRainingToday","setIsRainingToday","search","evt","fetch","then","res","json","result","console","log","e","target","value","main","name","sys","country","Date","toDateString","undefined"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMW,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACV,GAAJ,KAAY,OAAhB,EAAyB;AACvBW,MAAAA,KAAK,CAAE,GAAEZ,GAAG,CAACE,IAAK,eAAcE,OAAQ,yBAAwBJ,GAAG,CAACC,GAAI,EAAnE,CAAL,CACGY,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdT,QAAAA,OAAO,CAACS,MAAD,CAAP;AACAX,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OANH;AAOD;;AAAA;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,QAAQ,EAAEG,CAAC,IAAId,UAAU,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;AAKE,UAAA,KAAK,EAAEjB,OALT;AAME,UAAA,UAAU,EAAEM;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAWI,OAAOJ,IAAI,CAACgB,IAAZ,IAAoB,WAArB,gBACC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,uBAA2BhB,IAAI,CAACiB,IAAhC,QAAwCjB,IAAI,CAACkB,GAAL,CAASC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBAAuB,IAAIC,IAAJ,GAAWC,YAAX;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMInB,cAAc,KAAKoB,SAAnB,iBACA;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,uBAA6BtB,IAAI,CAACgB,IAAL,KAAc,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAgBI,EA3BP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAlDQnB,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nconst api = {\n  key: \"93da148cde43b30ed7c6df2296294e89\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [zipCode, setZipCode] = useState('');\n  const [rain, setRain] = useState({});\n  const [isRainingToday, setIsRainingToday] = useState('');\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?zip=${zipCode}&units=imperial&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setRain(result);\n          setZipCode('');\n          console.log(result)\n        });\n    };\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Enter zip code\"\n            onChange={e => setZipCode(e.target.value)}\n            value={zipCode}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof rain.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{rain.name}, {rain.sys.country}</div>\n              <div className=\"date\">{new Date().toDateString()}</div>\n            </div>\n            {\n              isRainingToday !== undefined &&\n              <div className=\"rains\">\n                <div className=\"rain-true\">{(rain.main === \"rain\")}\n\n                  Yes, it will rain today!</div>\n                <div className=\"rain-false\">No, it will not rain today :(</div>\n            </div>\n            }\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}