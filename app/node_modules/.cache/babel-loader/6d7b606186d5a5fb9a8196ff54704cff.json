{"ast":null,"code":"var _jsxFileName = \"/Users/emmastrickland/dev/rain-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openWeatherApi = {\n  key: \"93da148cde43b30ed7c6df2296294e89\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst zipCodeApi = {\n  key: \"nBYlPO8pEqiMZBYx6OHjZnaXhcdY5Z7y3z6lhk4NdZuVzlr1ol5jh5UBuXKcZgBR\",\n  base: \"https://www.zipcodeapi.com/rest/\"\n};\n\nfunction App() {\n  _s();\n\n  const [zipCode, setZipCode] = useState('');\n  const [rain, setRain] = useState({});\n  const [isRainingToday, setIsRainingToday] = useState('');\n\n  const getLatAndLong = zipCodeApiResponse => {\n    let latAndLong = [];\n    latAndLong.push(zipCodeApiResponse['lat'], zipCodeApiResponse['lng']);\n    return latAndLong;\n  };\n\n  const isRaining = openWeatherResponse => {\n    let possibleRains = [\"rain\", \"thunderstorm\", \"heavy rain\", \"light rain\"];\n\n    for (let key in openWeatherResponse) {\n      key = \"daily\";\n\n      if (possibleRains.includes(openWeatherResponse[key][0].weather[0].main.toLowerCase())) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      // TODO: make API request with zip code to get lat and long\n      fetch(`${zipCodeApi.base}${zipCodeApi.key}/info.json/{zipCode}/degrees`).then(res => res.json()).then(result => {\n        console.log('zip code api: ', result); // TODO: get lat and lng from result\n\n        let latAndLong = getLatAndLong(result); // TODO: make request with lat and long\n\n        fetch(`${openWeatherApi.base}onecall/lat=${latAndLong[0]}&lon=${latAndLong[1]}&exclude=current,\n          minutely,hourly,alerts${openWeatherApi.key}`).then(res => res.json()).then(result => {\n          setRain(result);\n          setZipCode(''); // TODO: set to proper value\n\n          setIsRainingToday(isRaining(result));\n          console.log(result);\n        });\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Enter zip code\",\n          onChange: e => setZipCode(e.target.value),\n          value: zipCode,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), typeof rain.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [rain.name, \", \", rain.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new Date().toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), isRainingToday !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rains\",\n          children: isRainingToday === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rain-true\",\n            children: \"Yes, it will rain today!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rain-false\",\n            children: \"No, it will not rain today :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pjdwLr7JJlgL4LzjQa+7CD01rdI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emmastrickland/dev/rain-app/src/App.js"],"names":["React","useState","openWeatherApi","key","base","zipCodeApi","App","zipCode","setZipCode","rain","setRain","isRainingToday","setIsRainingToday","getLatAndLong","zipCodeApiResponse","latAndLong","push","isRaining","openWeatherResponse","possibleRains","includes","weather","main","toLowerCase","search","evt","fetch","then","res","json","result","console","log","e","target","value","name","sys","country","Date","toDateString","undefined"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nconst openWeatherApi = {\n  key: \"93da148cde43b30ed7c6df2296294e89\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nconst zipCodeApi = {\n  key: \"nBYlPO8pEqiMZBYx6OHjZnaXhcdY5Z7y3z6lhk4NdZuVzlr1ol5jh5UBuXKcZgBR\",\n  base: \"https://www.zipcodeapi.com/rest/\"  \n}\n\nfunction App() {\n  const [zipCode, setZipCode] = useState('');\n  const [rain, setRain] = useState({});\n  const [isRainingToday, setIsRainingToday] = useState('');\n\n  const getLatAndLong = zipCodeApiResponse => {\n    let latAndLong = [];\n    latAndLong.push(zipCodeApiResponse['lat'], zipCodeApiResponse['lng'])\n    return latAndLong;\n  }\n\n  const isRaining = openWeatherResponse => {\n    let possibleRains = [\"rain\", \"thunderstorm\", \"heavy rain\", \"light rain\"]\n    for (let key in openWeatherResponse) {\n      key = \"daily\"\n        if (possibleRains.includes(openWeatherResponse[key][0].weather[0].main.toLowerCase())) {\n            return true;\n        }\n    }\n    return false;\n  }\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      // TODO: make API request with zip code to get lat and long\n      fetch(`${zipCodeApi.base}${zipCodeApi.key}/info.json/{zipCode}/degrees`)\n        .then(res => res.json())\n        .then(result => {\n          console.log('zip code api: ', result);\n          // TODO: get lat and lng from result\n          let latAndLong = getLatAndLong(result);\n\n          // TODO: make request with lat and long\n          fetch(`${openWeatherApi.base}onecall/lat=${latAndLong[0]}&lon=${latAndLong[1]}&exclude=current,\n          minutely,hourly,alerts${openWeatherApi.key}`)\n            .then(res => res.json())\n            .then(result => {\n              setRain(result);\n              setZipCode('');\n              // TODO: set to proper value\n              setIsRainingToday(isRaining(result));\n              console.log(result)\n            });\n        });\n\n    };\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Enter zip code\"\n            onChange={e => setZipCode(e.target.value)}\n            value={zipCode}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof rain.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{rain.name}, {rain.sys.country}</div>\n              <div className=\"date\">{new Date().toDateString()}</div>\n            </div>\n            {\n              isRainingToday !== undefined &&\n                <div className=\"rains\">\n                  {\n                    isRainingToday === true\n                      ?  <div className=\"rain-true\">Yes, it will rain today!</div>\n                      : <div className=\"rain-false\">No, it will not rain today :(</div>\n                  }\n                </div>\n            }\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}