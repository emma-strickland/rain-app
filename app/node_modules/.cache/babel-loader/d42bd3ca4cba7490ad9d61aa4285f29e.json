{"ast":null,"code":"var _jsxFileName = \"/Users/emmastrickland/dev/rain-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"93da148cde43b30ed7c6df2296294e89\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [zipCode, setZipCode] = useState('');\n  const [rain, setRain] = useState({});\n  const [isRainingToday, setIsRainingToday] = useState('');\n\n  const isRaining = response => {\n    return true;\n  };\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?zip=${zipCode}&units=imperial&appid=${api.key}`).then(res => res.json()).then(result => {\n        setRain(result);\n        setZipCode('');\n        console.log(result); // TODO: set to proper value\n\n        setIsRainingToday(isR);\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Enter zip code\",\n          onChange: e => setZipCode(e.target.value),\n          value: zipCode,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), typeof rain.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [rain.name, \", \", rain.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new Date().toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), isRainingToday !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rains\",\n          children: isRainingToday === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rain-true\",\n            children: \"Yes, it will rain today!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rain-false\",\n            children: \"No, it will not rain today :(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pjdwLr7JJlgL4LzjQa+7CD01rdI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emmastrickland/dev/rain-app/src/App.js"],"names":["React","useState","api","key","base","App","zipCode","setZipCode","rain","setRain","isRainingToday","setIsRainingToday","isRaining","response","search","evt","fetch","then","res","json","result","console","log","isR","e","target","value","main","name","sys","country","Date","toDateString","undefined"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMW,SAAS,GAAGC,QAAQ,IAAI;AAC5B,WAAO,IAAP;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACZ,GAAJ,KAAY,OAAhB,EAAyB;AACvBa,MAAAA,KAAK,CAAE,GAAEd,GAAG,CAACE,IAAK,eAAcE,OAAQ,yBAAwBJ,GAAG,CAACC,GAAI,EAAnE,CAAL,CACGc,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdX,QAAAA,OAAO,CAACW,MAAD,CAAP;AACAb,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAHc,CAKd;;AACAT,QAAAA,iBAAiB,CAACY,GAAD,CAAjB;AACD,OATH;AAUD;;AAAA;AACF,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,QAAQ,EAAEC,CAAC,IAAIjB,UAAU,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;AAKE,UAAA,KAAK,EAAEpB,OALT;AAME,UAAA,UAAU,EAAEQ;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAWI,OAAON,IAAI,CAACmB,IAAZ,IAAoB,WAArB,gBACC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,uBAA2BnB,IAAI,CAACoB,IAAhC,QAAwCpB,IAAI,CAACqB,GAAL,CAASC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,sBAAuB,IAAIC,IAAJ,GAAWC,YAAX;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAMItB,cAAc,KAAKuB,SAAnB,iBACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAEIvB,cAAc,KAAK,IAAnB,gBACK;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,gBAEI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,gBAPN;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAiBI,EA5BP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GA1DQL,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\n\nconst api = {\n  key: \"93da148cde43b30ed7c6df2296294e89\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [zipCode, setZipCode] = useState('');\n  const [rain, setRain] = useState({});\n  const [isRainingToday, setIsRainingToday] = useState('');\n\n  const isRaining = response => {\n    return true;\n  }\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?zip=${zipCode}&units=imperial&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setRain(result);\n          setZipCode('');\n          console.log(result)\n\n          // TODO: set to proper value\n          setIsRainingToday(isR);\n        });\n    };\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Enter zip code\"\n            onChange={e => setZipCode(e.target.value)}\n            value={zipCode}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof rain.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{rain.name}, {rain.sys.country}</div>\n              <div className=\"date\">{new Date().toDateString()}</div>\n            </div>\n            {\n              isRainingToday !== undefined &&\n                <div className=\"rains\">\n                  {\n                    isRainingToday === true\n                      ?  <div className=\"rain-true\">Yes, it will rain today!</div>\n                      : <div className=\"rain-false\">No, it will not rain today :(</div>\n                  }\n            </div>\n            }\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}