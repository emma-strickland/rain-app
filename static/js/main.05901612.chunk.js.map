{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["config","API_BASE_URL","rainAudio","Audio","App","useState","zipCode","setZipCode","response","setResponse","useEffect","isRainingToday","play","pause","className","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","catch","error","console","log","city","state","Date","toDateString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAUeA,G,MAVF,CACTC,aAAc,uC,OCGZC,EAAY,IAAIC,MAAM,cA8DbC,MA5Df,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAuBA,OArBAC,qBAAU,WACHF,IACDA,EAASG,eACXT,EAAUU,OAEVV,EAAUW,WAEX,CAACL,IAeF,qBAAKM,UAAU,MAAf,SACE,iCACE,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,iBACZC,SAAU,SAAAC,GAAC,OAAIX,EAAWW,EAAEC,OAAOC,QACnCA,MAAOd,EACPe,WAtBK,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIxB,EAAOC,aAAX,yBAAwCK,IAC1CmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJnB,EAAYmB,MACXC,OAAM,SAAAC,GACPC,QAAQC,IAAI,UAAWF,WAkBJ,oBAAZtB,EACP,gCACE,sBAAKM,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BN,EAASyB,KAApC,KAA4CzB,EAAS0B,SACrD,qBAAKpB,UAAU,OAAf,UAAuB,IAAIqB,MAAOC,oBAEpC,qBAAKtB,UAAU,kBAAf,SACE,qBAAKA,UAAU,QAAf,UAEgC,IAA5BN,EAASG,eACL,qBAAKG,UAAU,aAAf,sCACA,qBAAKA,UAAU,aAAf,kDAKT,SChDEuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.05901612.chunk.js","sourcesContent":["const PROD = {\n    API_BASE_URL: 'https://rain-app-api.herokuapp.com'\n};\n\nconst DEV = {\n    API_BASE_URL: 'http://localhost:4000'\n};\n\nconst config = process.env.NODE_ENV === 'development' ? DEV : PROD;\n\nexport default config;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport config from './config';\n\nconst rainAudio = new Audio(\"./rain.mp3\");\n\nfunction App() {\n  const [zipCode, setZipCode] = useState('');\n  const [response, setResponse] = useState();\n\n  useEffect(() => {\n    if (!response) return;\n    if (response.isRainingToday) {\n      rainAudio.play();\n    } else {\n      rainAudio.pause();\n    }\n  }, [response]);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${config.API_BASE_URL}/rainData?zip=${zipCode}`)\n        .then(res => res.json())\n        .then(result => {\n          setResponse(result);\n        }).catch(error => {\n          console.log('error: ', error);\n        });\n    };\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Enter zip code\"\n            onChange={e => setZipCode(e.target.value)}\n            value={zipCode}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof response != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{response.city}, {response.state}</div>\n              <div className=\"date\">{new Date().toDateString()}</div>\n            </div>\n            <div className=\"rains-container\">\n              <div className=\"rains\">\n                {\n                  response.isRainingToday === true\n                    ? <div className=\"rains-text\">Yes, it will rain today!</div>\n                    : <div className=\"rains-text\">No, it will not rain today :(</div>\n                }\n              </div>\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}